"""consolidate_schema_add_leagues_and_fantasy_points

Revision ID: 9551729d3c90
Revises: 32dd55ab272a
Create Date: 2025-09-17 20:36:28.855435

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9551729d3c90'
down_revision: Union[str, None] = '32dd55ab272a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Migrate sleeper_leagues to leagues table structure
    # First rename the table
    op.rename_table('sleeper_leagues', 'leagues')

    # Add new columns for generic league support
    op.add_column('leagues', sa.Column('platform', sa.String(length=20), nullable=True))
    op.add_column('leagues', sa.Column('platform_league_id', sa.String(length=50), nullable=True))
    op.add_column('leagues', sa.Column('is_active', sa.Boolean(), default=True))

    # Populate platform columns with sleeper data
    op.execute("UPDATE leagues SET platform = 'sleeper', platform_league_id = league_id WHERE platform IS NULL")

    # Make the new columns non-nullable after populating them
    op.alter_column('leagues', 'platform', nullable=False)
    op.alter_column('leagues', 'platform_league_id', nullable=False)

    # Rename columns to match new schema
    op.alter_column('leagues', 'total_rosters', new_column_name='total_teams')
    # Note: scoring_settings already exists, drop the old settings column instead
    op.drop_column('leagues', 'settings')

    # Drop sleeper-specific columns we don't need in generic schema
    op.drop_column('leagues', 'sleeper_user_id')
    op.drop_column('leagues', 'draft_id')
    op.drop_column('leagues', 'previous_league_id')
    op.drop_column('leagues', 'last_synced')

    # Create new indexes for the leagues table
    op.create_index(op.f('ix_leagues_platform'), 'leagues', ['platform'], unique=False)
    op.create_index('ix_leagues_platform_id', 'leagues', ['platform', 'platform_league_id'], unique=False)
    op.create_index('ix_leagues_platform_season', 'leagues', ['platform', 'season'], unique=False)
    op.create_index('ix_leagues_user_season', 'leagues', ['user_id', 'season'], unique=False)
    op.create_table('player_stats',
    sa.Column('stat_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.String(length=50), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('season', sa.String(length=10), nullable=False),
    sa.Column('stat_type', sa.Enum('actual', 'projection', name='stat_type'), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('fantasy_points_ppr', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('fantasy_points_standard', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('fantasy_points_half_ppr', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('pass_yds', sa.Integer(), nullable=True),
    sa.Column('pass_tds', sa.Integer(), nullable=True),
    sa.Column('pass_ints', sa.Integer(), nullable=True),
    sa.Column('pass_att', sa.Integer(), nullable=True),
    sa.Column('pass_cmp', sa.Integer(), nullable=True),
    sa.Column('rush_yds', sa.Integer(), nullable=True),
    sa.Column('rush_tds', sa.Integer(), nullable=True),
    sa.Column('rush_att', sa.Integer(), nullable=True),
    sa.Column('rec_yds', sa.Integer(), nullable=True),
    sa.Column('rec_tds', sa.Integer(), nullable=True),
    sa.Column('rec', sa.Integer(), nullable=True),
    sa.Column('rec_tgt', sa.Integer(), nullable=True),
    sa.Column('pass_2pt', sa.Integer(), nullable=True),
    sa.Column('rush_2pt', sa.Integer(), nullable=True),
    sa.Column('rec_2pt', sa.Integer(), nullable=True),
    sa.Column('def_2pt', sa.Integer(), nullable=True),
    sa.Column('fum', sa.Integer(), nullable=True),
    sa.Column('fum_lost', sa.Integer(), nullable=True),
    sa.Column('pass_sack', sa.DECIMAL(precision=4, scale=1), nullable=True),
    sa.Column('ff', sa.DECIMAL(precision=4, scale=1), nullable=True),
    sa.Column('fum_rec_td', sa.Integer(), nullable=True),
    sa.Column('bonus_rec_te', sa.DECIMAL(precision=4, scale=1), nullable=True),
    sa.Column('fgm', sa.Integer(), nullable=True),
    sa.Column('fga', sa.Integer(), nullable=True),
    sa.Column('xpm', sa.Integer(), nullable=True),
    sa.Column('xpa', sa.Integer(), nullable=True),
    sa.Column('fgm_0_19', sa.Integer(), nullable=True),
    sa.Column('fgm_20_29', sa.Integer(), nullable=True),
    sa.Column('fgm_30_39', sa.Integer(), nullable=True),
    sa.Column('fgm_40_49', sa.Integer(), nullable=True),
    sa.Column('fgm_50_59', sa.Integer(), nullable=True),
    sa.Column('fgm_60p', sa.Integer(), nullable=True),
    sa.Column('fgmiss_0_19', sa.Integer(), nullable=True),
    sa.Column('fgmiss_20_29', sa.Integer(), nullable=True),
    sa.Column('fgmiss_30_39', sa.Integer(), nullable=True),
    sa.Column('fgmiss_40_49', sa.Integer(), nullable=True),
    sa.Column('fgm_yds', sa.Integer(), nullable=True),
    sa.Column('xpmiss', sa.Integer(), nullable=True),
    sa.Column('def_sack', sa.DECIMAL(precision=4, scale=1), nullable=True),
    sa.Column('def_int', sa.Integer(), nullable=True),
    sa.Column('def_fumble_rec', sa.Integer(), nullable=True),
    sa.Column('def_td', sa.Integer(), nullable=True),
    sa.Column('def_safety', sa.Integer(), nullable=True),
    sa.Column('def_block_kick', sa.Integer(), nullable=True),
    sa.Column('def_pass_def', sa.Integer(), nullable=True),
    sa.Column('def_tackle_solo', sa.Integer(), nullable=True),
    sa.Column('def_tackle_assist', sa.Integer(), nullable=True),
    sa.Column('def_qb_hit', sa.Integer(), nullable=True),
    sa.Column('def_tfl', sa.Integer(), nullable=True),
    sa.Column('pts_allow_0', sa.Integer(), nullable=True),
    sa.Column('pts_allow_1_6', sa.Integer(), nullable=True),
    sa.Column('pts_allow_7_13', sa.Integer(), nullable=True),
    sa.Column('pts_allow_14_20', sa.Integer(), nullable=True),
    sa.Column('pts_allow_21_27', sa.Integer(), nullable=True),
    sa.Column('pts_allow_28_34', sa.Integer(), nullable=True),
    sa.Column('pts_allow_35p', sa.Integer(), nullable=True),
    sa.Column('yds_allow_0_100', sa.Integer(), nullable=True),
    sa.Column('yds_allow_100_199', sa.Integer(), nullable=True),
    sa.Column('yds_allow_200_299', sa.Integer(), nullable=True),
    sa.Column('yds_allow_300_349', sa.Integer(), nullable=True),
    sa.Column('yds_allow_350_399', sa.Integer(), nullable=True),
    sa.Column('yds_allow_400_449', sa.Integer(), nullable=True),
    sa.Column('yds_allow_450_499', sa.Integer(), nullable=True),
    sa.Column('yds_allow_500_549', sa.Integer(), nullable=True),
    sa.Column('yds_allow_550p', sa.Integer(), nullable=True),
    sa.Column('def_4_and_stop', sa.Integer(), nullable=True),
    sa.Column('def_st_td', sa.Integer(), nullable=True),
    sa.Column('def_st_fum_rec', sa.Integer(), nullable=True),
    sa.Column('def_st_ff', sa.DECIMAL(precision=4, scale=1), nullable=True),
    sa.Column('idp_tkl', sa.Integer(), nullable=True),
    sa.Column('kr_yd', sa.Integer(), nullable=True),
    sa.Column('pr_yd', sa.Integer(), nullable=True),
    sa.Column('st_td', sa.Integer(), nullable=True),
    sa.Column('st_fum_rec', sa.Integer(), nullable=True),
    sa.Column('st_ff', sa.DECIMAL(precision=4, scale=1), nullable=True),
    sa.Column('pts_allow', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('yds_allow', sa.Integer(), nullable=True),
    sa.Column('raw_stats', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], ),
    sa.PrimaryKeyConstraint('stat_id')
    )
    op.create_index(op.f('ix_player_stats_player_id'), 'player_stats', ['player_id'], unique=False)
    op.create_index('ix_player_stats_player_week_season', 'player_stats', ['player_id', 'week', 'season'], unique=False)
    op.create_index(op.f('ix_player_stats_season'), 'player_stats', ['season'], unique=False)
    op.create_index('ix_player_stats_season_type', 'player_stats', ['season', 'stat_type'], unique=False)
    op.create_index(op.f('ix_player_stats_source_id'), 'player_stats', ['source_id'], unique=False)
    op.create_index(op.f('ix_player_stats_stat_type'), 'player_stats', ['stat_type'], unique=False)
    op.create_index('ix_player_stats_type_source', 'player_stats', ['stat_type', 'source_id'], unique=False)
    op.create_index(op.f('ix_player_stats_week'), 'player_stats', ['week'], unique=False)
    op.create_table('fantasy_point_calculations',
    sa.Column('calculation_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('league_id', sa.String(length=50), nullable=False),
    sa.Column('stat_id', sa.BigInteger(), nullable=False),
    sa.Column('fantasy_points', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('scoring_breakdown', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.league_id'], ),
    sa.ForeignKeyConstraint(['stat_id'], ['player_stats.stat_id'], ),
    sa.PrimaryKeyConstraint('calculation_id')
    )
    op.create_index('ix_fantasy_calculations_league_points', 'fantasy_point_calculations', ['league_id', 'fantasy_points'], unique=False)
    op.create_index('ix_fantasy_calculations_league_stat', 'fantasy_point_calculations', ['league_id', 'stat_id'], unique=False)
    op.create_index(op.f('ix_fantasy_point_calculations_league_id'), 'fantasy_point_calculations', ['league_id'], unique=False)
    op.create_index(op.f('ix_fantasy_point_calculations_stat_id'), 'fantasy_point_calculations', ['stat_id'], unique=False)
    op.drop_index('ix_sleeper_player_stats_season', table_name='sleeper_player_stats')
    op.drop_index('ix_sleeper_player_stats_sleeper_player_id', table_name='sleeper_player_stats')
    op.drop_index('ix_sleeper_player_stats_week', table_name='sleeper_player_stats')
    op.drop_table('sleeper_player_stats')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sleeper_player_stats',
    sa.Column('stat_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('sleeper_player_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('week', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('season', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('fantasy_points_ppr', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('fantasy_points_standard', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('fantasy_points_half_ppr', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('pass_yds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pass_tds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pass_ints', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pass_att', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pass_cmp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rush_yds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rush_tds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rush_att', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rec_yds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rec_tds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rec', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rec_tgt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fga', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('xpm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('xpa', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('raw_stats', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('def_sack', sa.NUMERIC(precision=4, scale=1), autoincrement=False, nullable=True),
    sa.Column('def_int', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_fumble_rec', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_td', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_safety', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_block_kick', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_pass_def', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_tackle_solo', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_tackle_assist', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_qb_hit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_tfl', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pass_2pt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rush_2pt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rec_2pt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_2pt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fum', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fum_lost', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pass_sack', sa.NUMERIC(precision=4, scale=1), autoincrement=False, nullable=True),
    sa.Column('ff', sa.NUMERIC(precision=4, scale=1), autoincrement=False, nullable=True),
    sa.Column('fum_rec_td', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bonus_rec_te', sa.NUMERIC(precision=4, scale=1), autoincrement=False, nullable=True),
    sa.Column('fgm_0_19', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgm_20_29', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgm_30_39', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgm_40_49', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgm_50_59', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgm_60p', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgmiss_0_19', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgmiss_20_29', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgmiss_30_39', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgmiss_40_49', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fgm_yds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('xpmiss', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_allow_0', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_allow_1_6', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_allow_7_13', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_allow_14_20', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_allow_21_27', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_allow_28_34', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_allow_35p', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_0_100', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_100_199', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_200_299', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_300_349', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_350_399', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_400_449', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_450_499', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_500_549', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yds_allow_550p', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_4_and_stop', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_st_td', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_st_fum_rec', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('def_st_ff', sa.NUMERIC(precision=4, scale=1), autoincrement=False, nullable=True),
    sa.Column('idp_tkl', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('kr_yd', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pr_yd', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('st_td', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('st_fum_rec', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('st_ff', sa.NUMERIC(precision=4, scale=1), autoincrement=False, nullable=True),
    sa.Column('pts_allow', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('yds_allow', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sleeper_player_id'], ['players.player_id'], name='sleeper_player_stats_sleeper_player_id_fkey'),
    sa.PrimaryKeyConstraint('stat_id', name='sleeper_player_stats_pkey')
    )
    op.create_index('ix_sleeper_player_stats_week', 'sleeper_player_stats', ['week'], unique=False)
    op.create_index('ix_sleeper_player_stats_sleeper_player_id', 'sleeper_player_stats', ['sleeper_player_id'], unique=False)
    op.create_index('ix_sleeper_player_stats_season', 'sleeper_player_stats', ['season'], unique=False)
    op.drop_index(op.f('ix_fantasy_point_calculations_stat_id'), table_name='fantasy_point_calculations')
    op.drop_index(op.f('ix_fantasy_point_calculations_league_id'), table_name='fantasy_point_calculations')
    op.drop_index('ix_fantasy_calculations_league_stat', table_name='fantasy_point_calculations')
    op.drop_index('ix_fantasy_calculations_league_points', table_name='fantasy_point_calculations')
    op.drop_table('fantasy_point_calculations')
    op.drop_index(op.f('ix_player_stats_week'), table_name='player_stats')
    op.drop_index('ix_player_stats_type_source', table_name='player_stats')
    op.drop_index(op.f('ix_player_stats_stat_type'), table_name='player_stats')
    op.drop_index(op.f('ix_player_stats_source_id'), table_name='player_stats')
    op.drop_index('ix_player_stats_season_type', table_name='player_stats')
    op.drop_index(op.f('ix_player_stats_season'), table_name='player_stats')
    op.drop_index('ix_player_stats_player_week_season', table_name='player_stats')
    op.drop_index(op.f('ix_player_stats_player_id'), table_name='player_stats')
    op.drop_table('player_stats')
    # Reverse the leagues table migration
    op.drop_index('ix_leagues_user_season', table_name='leagues')
    op.drop_index('ix_leagues_platform_season', table_name='leagues')
    op.drop_index('ix_leagues_platform_id', table_name='leagues')
    op.drop_index(op.f('ix_leagues_platform'), table_name='leagues')

    # Add back sleeper-specific columns
    op.add_column('leagues', sa.Column('sleeper_user_id', sa.String(length=50), nullable=True))
    op.add_column('leagues', sa.Column('draft_id', sa.String(length=50), nullable=True))
    op.add_column('leagues', sa.Column('previous_league_id', sa.String(length=50), nullable=True))
    op.add_column('leagues', sa.Column('last_synced', sa.DateTime(), nullable=True))
    op.add_column('leagues', sa.Column('settings', sa.JSON(), nullable=True))

    # Rename columns back
    op.alter_column('leagues', 'total_teams', new_column_name='total_rosters')

    # Drop the generic platform columns
    op.drop_column('leagues', 'platform')
    op.drop_column('leagues', 'platform_league_id')
    op.drop_column('leagues', 'is_active')

    # Rename table back
    op.rename_table('leagues', 'sleeper_leagues')
    # ### end Alembic commands ###
